[{"path":[]},{"path":"https://elipousson.github.io/isstatic/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"CC0 1.0 Universal","title":"CC0 1.0 Universal","text":"CREATIVE COMMONS CORPORATION LAW FIRM PROVIDE LEGAL SERVICES. DISTRIBUTION DOCUMENT CREATE ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES INFORMATION “-” BASIS. CREATIVE COMMONS MAKES WARRANTIES REGARDING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER, DISCLAIMS LIABILITY DAMAGES RESULTING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER.","code":""},{"path":"https://elipousson.github.io/isstatic/LICENSE.html","id":"statement-of-purpose","dir":"","previous_headings":"","what":"Statement of Purpose","title":"CC0 1.0 Universal","text":"laws jurisdictions throughout world automatically confer exclusive Copyright Related Rights (defined ) upon creator subsequent owner(s) (, “owner”) original work authorship /database (, “Work”). Certain owners wish permanently relinquish rights Work purpose contributing commons creative, cultural scientific works (“Commons”) public can reliably without fear later claims infringement build upon, modify, incorporate works, reuse redistribute freely possible form whatsoever purposes, including without limitation commercial purposes. owners may contribute Commons promote ideal free culture production creative, cultural scientific works, gain reputation greater distribution Work part use efforts others. /purposes motivations, without expectation additional consideration compensation, person associating CC0 Work (“Affirmer”), extent owner Copyright Related Rights Work, voluntarily elects apply CC0 Work publicly distribute Work terms, knowledge Copyright Related Rights Work meaning intended legal effect CC0 rights. Copyright Related Rights. Work made available CC0 may protected copyright related neighboring rights (“Copyright Related Rights”). Copyright Related Rights include, limited , following: right reproduce, adapt, distribute, perform, display, communicate, translate Work; moral rights retained original author(s) /performer(s); publicity privacy rights pertaining person’s image likeness depicted Work; rights protecting unfair competition regards Work, subject limitations paragraph 4(), ; rights protecting extraction, dissemination, use reuse data Work; database rights (arising Directive 96/9/EC European Parliament Council 11 March 1996 legal protection databases, national implementation thereof, including amended successor version directive); similar, equivalent corresponding rights throughout world based applicable law treaty, national implementations thereof. Waiver. greatest extent permitted , contravention , applicable law, Affirmer hereby overtly, fully, permanently, irrevocably unconditionally waives, abandons, surrenders Affirmer’s Copyright Related Rights associated claims causes action, whether now known unknown (including existing well future claims causes action), Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“Waiver”). Affirmer makes Waiver benefit member public large detriment Affirmer’s heirs successors, fully intending Waiver shall subject revocation, rescission, cancellation, termination, legal equitable action disrupt quiet enjoyment Work public contemplated Affirmer’s express Statement Purpose. Public License Fallback. part Waiver reason judged legally invalid ineffective applicable law, Waiver shall preserved maximum extent permitted taking account Affirmer’s express Statement Purpose. addition, extent Waiver judged Affirmer hereby grants affected person royalty-free, non transferable, non sublicensable, non exclusive, irrevocable unconditional license exercise Affirmer’s Copyright Related Rights Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“License”). License shall deemed effective date CC0 applied Affirmer Work. part License reason judged legally invalid ineffective applicable law, partial invalidity ineffectiveness shall invalidate remainder License, case Affirmer hereby affirms () exercise remaining Copyright Related Rights Work (ii) assert associated claims causes action respect Work, either case contrary Affirmer’s express Statement Purpose. Limitations Disclaimers. trademark patent rights held Affirmer waived, abandoned, surrendered, licensed otherwise affected document. Affirmer offers Work -makes representations warranties kind concerning Work, express, implied, statutory otherwise, including without limitation warranties title, merchantability, fitness particular purpose, non infringement, absence latent defects, accuracy, present absence errors, whether discoverable, greatest extent permissible applicable law. Affirmer disclaims responsibility clearing rights persons may apply Work use thereof, including without limitation person’s Copyright Related Rights Work. , Affirmer disclaims responsibility obtaining necessary consents, permissions rights required use Work. Affirmer understands acknowledges Creative Commons party document duty obligation respect CC0 use Work.","code":""},{"path":"https://elipousson.github.io/isstatic/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Eli Pousson. Author, maintainer, copyright holder.","code":""},{"path":"https://elipousson.github.io/isstatic/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pousson E (2023). isstatic: Dependency-Free Object Tests. https://github.com/elipousson/isstatic, https://elipousson.github.io/isstatic/.","code":"@Manual{,   title = {isstatic: Dependency-Free Object Tests},   author = {Eli Pousson},   year = {2023},   note = {https://github.com/elipousson/isstatic, https://elipousson.github.io/isstatic/}, }"},{"path":"https://elipousson.github.io/isstatic/index.html","id":"isstatic","dir":"","previous_headings":"","what":"Dependency-Free Object Tests","title":"Dependency-Free Object Tests","text":"goal isstatic provide convenient set static functions checking object class inheritance, regex pattern matching, extracting attributes, basic type conversion. ’ve used reused functions across number different packages using staticimports also intended way keep functions standardized across projects. package inspired stringstatic package Alex Rossell Hayes.","code":""},{"path":"https://elipousson.github.io/isstatic/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Dependency-Free Object Tests","text":"can install development version isstatic like :","code":"pak::pkg_install(\"elipousson/isstatic\")"},{"path":"https://elipousson.github.io/isstatic/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Dependency-Free Object Tests","text":"import functions isstatic package, put comment block starting # @staticimports pkg:isstatic one R source files. example, utils.R file may top: pkg:isstatic means import functions stringstatic package. can find many useful functions pkg:staticimports. Subsequent lines list objects import package. case, is_sf(), is_bbox() is_url(). perform import, run: default, write functions R/staticimports.R file project.","code":"# @staticimports pkg:isstatic #  is_sf is_bbox is_url staticimports::import()"},{"path":"https://elipousson.github.io/isstatic/reference/alpha_to_int.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an alphabetical character object from A to Z into a corresponding\ninteger — alpha_to_int","title":"Convert an alphabetical character object from A to Z into a corresponding\ninteger — alpha_to_int","text":"Integers NA values passed . Double characters corresponding Roman numeral converting NA values.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/alpha_to_int.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an alphabetical character object from A to Z into a corresponding\ninteger — alpha_to_int","text":"","code":"alpha_to_int(x, dict = LETTERS, n = 1, quiet = TRUE, call = parent.frame())"},{"path":"https://elipousson.github.io/isstatic/reference/alpha_to_int.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an alphabetical character object from A to Z into a corresponding\ninteger — alpha_to_int","text":"x Character vector length n strings compare dict. Typically, letters \"\" \"Z\". Case sensitive. dict Character vector match x. Default: LETTERS. n Maximum character length non-NA objects permitted. Set NULL >1 dict includes objects one character. quiet TRUE, suppress warnings introduction NA values coercion. call Default: parent.frame(). Passed input checking functions improve error messages.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/alpha_to_int.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an alphabetical character object from A to Z into a corresponding\ninteger — alpha_to_int","text":"length 1 integer 1 26.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/as_cardinal_bearing.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a numeric bearing value to the closest cardinal bearing — as_cardinal_bearing","title":"Convert a numeric bearing value to the closest cardinal bearing — as_cardinal_bearing","text":"Convert numeric bearing value closest cardinal bearing","code":""},{"path":"https://elipousson.github.io/isstatic/reference/as_cardinal_bearing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a numeric bearing value to the closest cardinal bearing — as_cardinal_bearing","text":"","code":"as_cardinal_bearing(x, winds = 8, cols = c(\"bearing\", \"cardinal_bearing\"))"},{"path":"https://elipousson.github.io/isstatic/reference/as_cardinal_bearing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a numeric bearing value to the closest cardinal bearing — as_cardinal_bearing","text":"x numeric vector degrees data.frame column name matching first name cols. winds Number winds use results (4, 8, 16). cols length 2 character vector first value column name containing bearing values second name new column added data.frame. Required x data.frame.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/as_cardinal_bearing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a numeric bearing value to the closest cardinal bearing — as_cardinal_bearing","text":"named numeric vector cardinal bearings (wind names) data.frame added column containing cardinal bearings.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/as_crs.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce a sf, sfc, or bbox object to a coordinate reference system — as_crs","title":"Coerce a sf, sfc, or bbox object to a coordinate reference system — as_crs","text":"function updated support stars terra objects.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/as_crs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce a sf, sfc, or bbox object to a coordinate reference system — as_crs","text":"","code":"as_crs(x, input = TRUE)  is_lonlat_crs(x, crs = c(\"EPSG:4326\", \"EPSG:4269\"))"},{"path":"https://elipousson.github.io/isstatic/reference/as_crs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce a sf, sfc, or bbox object to a coordinate reference system — as_crs","text":"x sf, sfc, bbox object coerce CRS. input TRUE (default), return \"input\" component crs object. FALSE, return full crs object. crs is_lonlat_crs, coordinate reference system use lonlat crs.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/as_integer.html","id":null,"dir":"Reference","previous_headings":"","what":"as.integer with option to suppress warnings for NA coercion — as_integer","title":"as.integer with option to suppress warnings for NA coercion — as_integer","text":".integer option suppress warnings NA coercion","code":""},{"path":"https://elipousson.github.io/isstatic/reference/as_integer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"as.integer with option to suppress warnings for NA coercion — as_integer","text":"","code":"as_integer(x, quiet = TRUE)"},{"path":"https://elipousson.github.io/isstatic/reference/as_integer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"as.integer with option to suppress warnings for NA coercion — as_integer","text":"x object coerced tested. quiet TRUE, suppress warnings creation NA values coercion object types. Default TRUE.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/as_numbered_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a numeric vector to a vector of numbered labels — as_numbered_labels","title":"Convert a numeric vector to a vector of numbered labels — as_numbered_labels","text":"function allows creation numbered labels vector using range numbering styles.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/as_numbered_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a numeric vector to a vector of numbered labels — as_numbered_labels","text":"","code":"as_numbered_labels(   x,   labels = \"arabic\",   start = NULL,   suffix = NULL,   base = 26,   cols = \"num_label\",   pad = NULL,   side = \"left\",   quiet = TRUE,   call = parent.frame() )"},{"path":"https://elipousson.github.io/isstatic/reference/as_numbered_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a numeric vector to a vector of numbered labels — as_numbered_labels","text":"x integer vector data.frame. integer vector integer column used number converted based label style. x integer data.frame integer column, numbering created based seq_along(). labels Label style. Options include \"arabic\", \"alph\", \"Alph\", \"alpha\", \"Alpha\", \"roman\", \"Roman\". start Starting number value. Letters supported label style \"alph\", \"Alph\", \"alpha\",  \"Alpha\" Roman numerals supported label \"roman\" \"Roman\". suffix Suffix character follow number labels. example, x = 1 suffix = \".\" returned label \"1.\" base Base used alphabetical number labels. Highest letter use alphabetical numbers. Single digit letters (Z) numbers 1 26 supported. example, base 3, alphabetical labels numbers higher 3 prior value prefixed 3 \"C\" 4 \"AA\". Defaults 26 converts 27 \"AA\", 53 \"BA\", etc. cols Column name use added column number labels x data.frame. Defaults \"num_label\". cols length 2, first item vector assumed column name data.frame use x second item used column name added column number labels. pad, side pad NULL, pass pad side str_pad() added stringstatic::str_pad() package. quiet TRUE, suppress warnings creation NA values coercion object types. Default TRUE. call Default: parent.frame(). Passed input checking functions improve error message traceback.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/as_numbered_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a numeric vector to a vector of numbered labels — as_numbered_labels","text":"x vector, function returns numeric vector labels \"arabic\" character vector otherwise. x data.frame, as_numbered_labels() returns modified data.frame added column name matching second value cols parameter.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/as_orientation.html","id":null,"dir":"Reference","previous_headings":"","what":"What is the orientation of a numeric aspect ratio? — as_orientation","title":"What is the orientation of a numeric aspect ratio? — as_orientation","text":"orientation numeric aspect ratio?","code":""},{"path":"https://elipousson.github.io/isstatic/reference/as_orientation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"What is the orientation of a numeric aspect ratio? — as_orientation","text":"","code":"as_orientation(x, tolerance = 0.1, cols = c(\"width\", \"height\"))"},{"path":"https://elipousson.github.io/isstatic/reference/as_orientation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"What is the orientation of a numeric aspect ratio? — as_orientation","text":"x numeric vector aspect ratio data.frame width height column (using width height values columns matching cols parameter). tolerance Positive numeric value 1 used determine aspect ratio square, landscape, portrait. cols Name width height column x data.frame object.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/as_orientation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"What is the orientation of a numeric aspect ratio? — as_orientation","text":"character vector orientations length x , x data.frame, length number rows x.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/as_roman.html","id":null,"dir":"Reference","previous_headings":"","what":"as.roman with option to suppress warnings for NA coercion — as_roman","title":"as.roman with option to suppress warnings for NA coercion — as_roman","text":".roman option suppress warnings NA coercion","code":""},{"path":"https://elipousson.github.io/isstatic/reference/as_roman.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"as.roman with option to suppress warnings for NA coercion — as_roman","text":"","code":"as_roman(x, quiet = TRUE)"},{"path":"https://elipousson.github.io/isstatic/reference/as_roman.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"as.roman with option to suppress warnings for NA coercion — as_roman","text":"x numeric character vector arabic roman numerals. quiet TRUE, suppress warnings creation NA values coercion object types. Default TRUE.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/as_sfc.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce a sf object to a sfc object — as_sfc","title":"Coerce a sf object to a sfc object — as_sfc","text":"possible, function updated support bbox objects spatial data classes.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/as_sfc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce a sf object to a sfc object — as_sfc","text":"","code":"as_sfc(x)"},{"path":"https://elipousson.github.io/isstatic/reference/as_sfc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce a sf object to a sfc object — as_sfc","text":"x sf object coerce.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/combine_words.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multiple words into a single string — combine_words","title":"Combine multiple words into a single string — combine_words","text":"value inline R expression character vector multiple elements, may want combine phrase like b, , b, c. helper function .","code":""},{"path":"https://elipousson.github.io/isstatic/reference/combine_words.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multiple words into a single string — combine_words","text":"","code":"combine_words(   words,   sep = \", \",   and = \" and \",   before = \"\",   after = before,   oxford_comma = TRUE )"},{"path":"https://elipousson.github.io/isstatic/reference/combine_words.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Combine multiple words into a single string — combine_words","text":"Adapted knitr::combine_words() knitr package.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/combine_words.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multiple words into a single string — combine_words","text":"words character vector. sep Separator inserted words. Character string prepended last word. , character string added /word. oxford_comma Whether insert separator last two elements list.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/combine_words.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine multiple words into a single string — combine_words","text":"character string","code":""},{"path":"https://elipousson.github.io/isstatic/reference/combine_words.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Combine multiple words into a single string — combine_words","text":"length input words smaller equal 1, words returned. words length 2, first word second word combined using string, blank, sep used. length greater 2, sep used separate words, string prepended last word.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/combine_words.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Combine multiple words into a single string — combine_words","text":"Yihui Xie xie@yihui.name (ORCID)","code":""},{"path":"https://elipousson.github.io/isstatic/reference/combine_words.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine multiple words into a single string — combine_words","text":"","code":"combine_words(\"a\") #> [1] \"a\" combine_words(c(\"a\", \"b\")) #> [1] \"a and b\" combine_words(c(\"a\", \"b\", \"c\")) #> [1] \"a, b, and c\" combine_words(c(\"a\", \"b\", \"c\"), sep = \" / \", and = \"\") #> [1] \"a / b / c\" combine_words(c(\"a\", \"b\", \"c\"), and = \"\") #> [1] \"a, b, c\" combine_words(c(\"a\", \"b\", \"c\"), before = \"\\\"\", after = \"\\\"\") #> [1] \"\\\"a\\\", \\\"b\\\", and \\\"c\\\"\" combine_words(c(\"a\", \"b\", \"c\"), before = \"\\\"\", after = \"\\\"\", oxford_comma = FALSE) #> [1] \"\\\"a\\\", \\\"b\\\" and \\\"c\\\"\""},{"path":"https://elipousson.github.io/isstatic/reference/digit_pattern.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper to return a regex based on side — digit_pattern","title":"Helper to return a regex based on side — digit_pattern","text":"Helper return regex based side","code":""},{"path":"https://elipousson.github.io/isstatic/reference/digit_pattern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper to return a regex based on side — digit_pattern","text":"","code":"digit_pattern(pattern = \"[0-9]+\", side = NULL)"},{"path":"https://elipousson.github.io/isstatic/reference/file_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct path to file ignoring NULL values for filename or path — file_path","title":"Construct path to file ignoring NULL values for filename or path — file_path","text":"replacement file.path()","code":""},{"path":"https://elipousson.github.io/isstatic/reference/file_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct path to file ignoring NULL values for filename or path — file_path","text":"","code":"file_path(   ...,   filename = NULL,   path = NULL,   fsep = .Platform$file.sep,   allow_null = FALSE )"},{"path":"https://elipousson.github.io/isstatic/reference/file_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct path to file ignoring NULL values for filename or path — file_path","text":"... Additional strings pass path filename. filename File name. Optional path supplied. path Path name. Optional filename supplied. fsep path separator use (assumed ASCII). allow_null TRUE, return NULL filename path NULL additional strings provided .... FALSE, stop filename path NULL additional strings provided ...","code":""},{"path":"https://elipousson.github.io/isstatic/reference/has_fileext.html","id":null,"dir":"Reference","previous_headings":"","what":"Does string contain the specified file type or any file extension? — has_fileext","title":"Does string contain the specified file type or any file extension? — has_fileext","text":"Check string contains filetype provided filetype. string NULL, returns FALSE.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/has_fileext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does string contain the specified file type or any file extension? — has_fileext","text":"","code":"has_fileext(string = NULL, fileext = NULL, ignore.case = FALSE)"},{"path":"https://elipousson.github.io/isstatic/reference/has_fileext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Does string contain the specified file type or any file extension? — has_fileext","text":"string String tested without filetype. Defaults NULL. fileext File type test . Optional. ignore.case FALSE, pattern matching case sensitive. TRUE, case ignored.","code":""},{"path":[]},{"path":"https://elipousson.github.io/isstatic/reference/has_filetype.html","id":null,"dir":"Reference","previous_headings":"","what":"Does string contain the specified file type or any file extension? — has_filetype","title":"Does string contain the specified file type or any file extension? — has_filetype","text":"Alternate naming convention has_fileext()","code":""},{"path":"https://elipousson.github.io/isstatic/reference/has_filetype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does string contain the specified file type or any file extension? — has_filetype","text":"","code":"has_filetype(string = NULL, filetype = NULL, ignore.case = FALSE)"},{"path":"https://elipousson.github.io/isstatic/reference/has_filetype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Does string contain the specified file type or any file extension? — has_filetype","text":"string String tested without filetype. Defaults NULL. filetype File type test . Optional. ignore.case FALSE, pattern matching case sensitive. TRUE, case ignored.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/has_len_between.html","id":null,"dir":"Reference","previous_headings":"","what":"Is the length of x between two values? — has_len_between","title":"Is the length of x between two values? — has_len_between","text":"length x two values?","code":""},{"path":"https://elipousson.github.io/isstatic/reference/has_len_between.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is the length of x between two values? — has_len_between","text":"","code":"has_len_between(x, left, right)"},{"path":"https://elipousson.github.io/isstatic/reference/has_len_between.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is the length of x between two values? — has_len_between","text":"x Object check. left, right Min max values check length x .","code":""},{"path":"https://elipousson.github.io/isstatic/reference/has_same_crs.html","id":null,"dir":"Reference","previous_headings":"","what":"\nhas_same_crs(): Do two sf, sfc, or bbox objects use the same coordinate\nreference system?\n — has_same_crs","title":"\nhas_same_crs(): Do two sf, sfc, or bbox objects use the same coordinate\nreference system?\n — has_same_crs","text":"has_same_crs(): two sf, sfc, bbox objects use coordinate reference system?","code":""},{"path":"https://elipousson.github.io/isstatic/reference/has_same_crs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"\nhas_same_crs(): Do two sf, sfc, or bbox objects use the same coordinate\nreference system?\n — has_same_crs","text":"","code":"has_same_crs(x, y, ...)"},{"path":"https://elipousson.github.io/isstatic/reference/has_same_crs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"\nhas_same_crs(): Do two sf, sfc, or bbox objects use the same coordinate\nreference system?\n — has_same_crs","text":"x, y sf, sfc, bbox objects compared. ... Additional parameters passed identical() has_same_crs().","code":""},{"path":"https://elipousson.github.io/isstatic/reference/has_same_len.html","id":null,"dir":"Reference","previous_headings":"","what":"Do two object have an identical length? — has_same_len","title":"Do two object have an identical length? — has_same_len","text":"two object identical length? two object identical length?","code":""},{"path":"https://elipousson.github.io/isstatic/reference/has_same_len.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Do two object have an identical length? — has_same_len","text":"","code":"has_same_len(x, y, ...)  has_same_len(x, y, ...)"},{"path":"https://elipousson.github.io/isstatic/reference/has_same_len.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Do two object have an identical length? — has_same_len","text":"x, y Two strings character vectors compare. ... Additional parameters passed identical()","code":""},{"path":"https://elipousson.github.io/isstatic/reference/int_to_alpha.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a integer into a corresponding letter or multi-letter string — int_to_alpha","title":"Convert a integer into a corresponding letter or multi-letter string — int_to_alpha","text":"Character values provided dict (default letters \"\" \"Z\") passed . Non-integer numeric values characters found provided dict converting NA values.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/int_to_alpha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a integer into a corresponding letter or multi-letter string — int_to_alpha","text":"","code":"int_to_alpha(x, suffix = NULL, base = 26, dict = LETTERS, quiet = TRUE)"},{"path":"https://elipousson.github.io/isstatic/reference/int_to_alpha.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Convert a integer into a corresponding letter or multi-letter string — int_to_alpha","text":"Adapted recursive solution provided G. Grothendieck May 31, 2017 StackOverflow answer.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/int_to_alpha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a integer into a corresponding letter or multi-letter string — int_to_alpha","text":"x integer vector vector can coerced integer vector suffix Suffix character follow alpha character, e.g. x = 1 suffix = \".\" returned label \".\". suffix also used separate values x greater base, e.g. x = 27 suffix = \".\" returns \"..\" Defaults NULL. base base numeric, converted integer alpha_to_int(). dict Character vector compare x. Default: LETTERS. quiet TRUE, suppress warnings introduction NA values coercion.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/int_to_alpha.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a integer into a corresponding letter or multi-letter string — int_to_alpha","text":"integer vector composed objects 1 26 length x.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/is_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Do all items in a list or vector return TRUE from a predicate function? — is_all","title":"Do all items in a list or vector return TRUE from a predicate function? — is_all","text":"items list vector return TRUE predicate function? is_all_null(): items list vector NULL values? is_all_na(): items list vector NA values?","code":""},{"path":"https://elipousson.github.io/isstatic/reference/is_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Do all items in a list or vector return TRUE from a predicate function? — is_all","text":"","code":"is_all(x, FUN, ...)  is_all_null(x)  is_all_na(x)"},{"path":"https://elipousson.github.io/isstatic/reference/is_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Do all items in a list or vector return TRUE from a predicate function? — is_all","text":"x list vector passed X parameter vapply(). FUN function applied element X:     see ‘Details’.  case functions like     +, %*%, function name must backquoted quoted. ... Arguments passed base::vapply USE.NAMES logical; TRUE X character,     use X names result unless names     already.  Since argument follows ... name     abbreviated. FUN.VALUE (generalized) vector; template return     value FUN.  See ‘Details’.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/is_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Do all items in a list or vector return TRUE from a predicate function? — is_all","text":"TRUE FUN returns TRUE elements x FALSE element returns FALSE.","code":""},{"path":[]},{"path":"https://elipousson.github.io/isstatic/reference/is_all_in.html","id":null,"dir":"Reference","previous_headings":"","what":"Is all of x in y? — is_all_in","title":"Is all of x in y? — is_all_in","text":"x y?","code":""},{"path":"https://elipousson.github.io/isstatic/reference/is_all_in.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is all of x in y? — is_all_in","text":"","code":"is_all_in(x, y)"},{"path":"https://elipousson.github.io/isstatic/reference/is_all_in.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is all of x in y? — is_all_in","text":"x Object tested. y Vector compare x .","code":""},{"path":"https://elipousson.github.io/isstatic/reference/is_any.html","id":null,"dir":"Reference","previous_headings":"","what":"Do any items in a list or vector return TRUE from a predicate function? — is_any","title":"Do any items in a list or vector return TRUE from a predicate function? — is_any","text":"items list vector return TRUE predicate function? is_any_null(): item list vector NULL value? is_any_na(): item list vector NA value? is_none(): item list vector return TRUE predicate function? is_none_null(): item list vector NULL? items list vector return TRUE predicate function? is_any_null(): item list vector NULL value? is_any_na(): item list vector NA value?","code":""},{"path":"https://elipousson.github.io/isstatic/reference/is_any.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Do any items in a list or vector return TRUE from a predicate function? — is_any","text":"","code":"is_any(x, FUN, ...)  is_any_null(x)  is_any_na(x)  is_none(x, FUN, ...)  is_none_null(x)  is_any(x, FUN, ...)  is_any_null(x)  is_any_na(x)"},{"path":"https://elipousson.github.io/isstatic/reference/is_any.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Do any items in a list or vector return TRUE from a predicate function? — is_any","text":"x list vector passed vapply(). FUN function applied element X:     see ‘Details’.  case functions like     +, %*%, function name must backquoted quoted. ... Arguments passed base::vapply, base::vapply USE.NAMES logical; TRUE X character,     use X names result unless names     already.  Since argument follows ... name     abbreviated. FUN.VALUE (generalized) vector; template return     value FUN.  See ‘Details’.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/is_any.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Do any items in a list or vector return TRUE from a predicate function? — is_any","text":"TRUE FUN returns TRUE element x FALSE elements return FALSE. TRUE FUN returns TRUE element x FALSE elements return FALSE.","code":""},{"path":[]},{"path":"https://elipousson.github.io/isstatic/reference/is_any_in.html","id":null,"dir":"Reference","previous_headings":"","what":"Are any of x in y? — is_any_in","title":"Are any of x in y? — is_any_in","text":"x y?","code":""},{"path":"https://elipousson.github.io/isstatic/reference/is_any_in.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Are any of x in y? — is_any_in","text":"","code":"is_any_in(x, y)"},{"path":"https://elipousson.github.io/isstatic/reference/is_any_in.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Are any of x in y? — is_any_in","text":"x Object tested. y Vector compare x .","code":""},{"path":"https://elipousson.github.io/isstatic/reference/is_blank.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if a character vector consists of blank strings — is_blank","title":"Test if a character vector consists of blank strings — is_blank","text":"Return TRUE elements character vector blank (white spaces empty strings).","code":""},{"path":"https://elipousson.github.io/isstatic/reference/is_blank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if a character vector consists of blank strings — is_blank","text":"","code":"is_blank(x)"},{"path":"https://elipousson.github.io/isstatic/reference/is_blank.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Test if a character vector consists of blank strings — is_blank","text":"Adapted xfun::is_blank() xfun package.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/is_blank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if a character vector consists of blank strings — is_blank","text":"x character vector.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/is_blank.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if a character vector consists of blank strings — is_blank","text":"TRUE input blank, FALSE otherwise.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/is_blank.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Test if a character vector consists of blank strings — is_blank","text":"Yihui Xie xie@yihui.name (ORCID)","code":""},{"path":"https://elipousson.github.io/isstatic/reference/is_blank.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test if a character vector consists of blank strings — is_blank","text":"","code":"is_blank(\"\") #> [1] TRUE is_blank(\"abc\") #> [1] FALSE is_blank(c(\"\", \"  \", \"\\n\\t\")) #> [1] TRUE is_blank(c(\"\", \" \", \"abc\")) #> [1] FALSE"},{"path":"https://elipousson.github.io/isstatic/reference/is_fileext_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Does this text end in the provided file extension? — is_fileext_path","title":"Does this text end in the provided file extension? — is_fileext_path","text":"text end provided file extension? is_geojson_fileext: text end GeoJSON file extension? is_csv_fileext: text end CSV file extension? is_excel_fileext: text end XLS XLSX file extension? is_rdata_fileext: text end rds, rda, RData file extension? is_rds_fileext: text end rds file extension? is_rda_fileext: text end rda file extension?","code":""},{"path":"https://elipousson.github.io/isstatic/reference/is_fileext_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does this text end in the provided file extension? — is_fileext_path","text":"","code":"is_fileext_path(x, fileext, ignore.case = TRUE)  is_geojson_fileext(x, ignore.case = TRUE)  is_csv_fileext(x, ignore.case = TRUE)  is_excel_fileext(x, ignore.case = TRUE)  is_rdata_fileext(x, ignore.case = TRUE)  is_rds_fileext(x, ignore.case = TRUE)  is_rda_fileext(x, ignore.case = TRUE)"},{"path":"https://elipousson.github.io/isstatic/reference/is_fileext_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Does this text end in the provided file extension? — is_fileext_path","text":"x character vector check matches, object can coerced .character() character vector. fileext file extension compare x. Required. vector multiple extensions provided, returns TRUE match. ignore.case FALSE, pattern matching case       sensitive TRUE, case ignored matching.","code":""},{"path":[]},{"path":"https://elipousson.github.io/isstatic/reference/is_filetype_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Does this text end in the specified filetype? — is_filetype_path","title":"Does this text end in the specified filetype? — is_filetype_path","text":"text end specified filetype?","code":""},{"path":"https://elipousson.github.io/isstatic/reference/is_filetype_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does this text end in the specified filetype? — is_filetype_path","text":"","code":"is_filetype_path(x, filetype, ignore.case = TRUE)"},{"path":"https://elipousson.github.io/isstatic/reference/is_filetype_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Does this text end in the specified filetype? — is_filetype_path","text":"x character vector check matches, object can coerced .character() character vector. filetype file extension (multiple file extensions) compare x. Required. ignore.case FALSE, pattern matching case       sensitive TRUE, case ignored matching.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/is_gg.html","id":null,"dir":"Reference","previous_headings":"","what":"Is this a gg class object? — is_gg","title":"Is this a gg class object? — is_gg","text":"gg class object? ggplot class object? ggproto class object? patchwork class object?","code":""},{"path":"https://elipousson.github.io/isstatic/reference/is_gg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is this a gg class object? — is_gg","text":"","code":"is_gg(x)  is_ggplot(x)  is_ggproto(x)  is_patchwork(x)"},{"path":"https://elipousson.github.io/isstatic/reference/is_gg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is this a gg class object? — is_gg","text":"x Object tested.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/is_gg_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Do all items in this list inherit the gg class? — is_gg_list","title":"Do all items in this list inherit the gg class? — is_gg_list","text":"items list inherit gg class?","code":""},{"path":"https://elipousson.github.io/isstatic/reference/is_gg_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Do all items in this list inherit the gg class? — is_gg_list","text":"","code":"is_gg_list(x)"},{"path":"https://elipousson.github.io/isstatic/reference/is_gg_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Do all items in this list inherit the gg class? — is_gg_list","text":"x Object tested.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/is_list_of.html","id":null,"dir":"Reference","previous_headings":"","what":"Do all items in this list inherit the provided class? — is_list_of","title":"Do all items in this list inherit the provided class? — is_list_of","text":"items list inherit provided class?","code":""},{"path":"https://elipousson.github.io/isstatic/reference/is_list_of.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Do all items in this list inherit the provided class? — is_list_of","text":"","code":"is_list_of(x, what = NULL)"},{"path":"https://elipousson.github.io/isstatic/reference/is_list_of.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Do all items in this list inherit the provided class? — is_list_of","text":"x Object tested. character vector naming classes.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/is_named.html","id":null,"dir":"Reference","previous_headings":"","what":"Is this object a named list or character vector? — is_named","title":"Is this object a named list or character vector? — is_named","text":"object named list character vector? object provided names? object provided names?","code":""},{"path":"https://elipousson.github.io/isstatic/reference/is_named.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is this object a named list or character vector? — is_named","text":"","code":"is_named(x)  has_all_names(x, name)  has_any_names(x, name)"},{"path":"https://elipousson.github.io/isstatic/reference/is_named.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is this object a named list or character vector? — is_named","text":"x data frame another named object. name Element name(s) check.","code":""},{"path":[]},{"path":"https://elipousson.github.io/isstatic/reference/is_none_in.html","id":null,"dir":"Reference","previous_headings":"","what":"Are none of x in y? — is_none_in","title":"Are none of x in y? — is_none_in","text":"none x y?","code":""},{"path":"https://elipousson.github.io/isstatic/reference/is_none_in.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Are none of x in y? — is_none_in","text":"","code":"is_none_in(x, y)"},{"path":"https://elipousson.github.io/isstatic/reference/is_none_in.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Are none of x in y? — is_none_in","text":"x Object tested. y Vector compare x .","code":""},{"path":"https://elipousson.github.io/isstatic/reference/is_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Is this a sf class object? — is_sf","title":"Is this a sf class object? — is_sf","text":"sf class object? sfc class object? sfg class object? bbox class object? sf, sfc, bbox class object? RasterLayer class object? Spatial class (sp) object?","code":""},{"path":"https://elipousson.github.io/isstatic/reference/is_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is this a sf class object? — is_sf","text":"","code":"is_sf(x)  is_sfc(x)  is_sfg(x)  is_bbox(x)  is_sf_ext(x, ext = TRUE)  is_raster(x)  is_sp(x)"},{"path":"https://elipousson.github.io/isstatic/reference/is_sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is this a sf class object? — is_sf","text":"x object tested inherits() ext TRUE, return TRUE x sf, sfc, bbox object. FALSE, check x sf object. ext character object, passed parameter inherits() sf.","code":""},{"path":[]},{"path":"https://elipousson.github.io/isstatic/reference/is_sf_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Do all items in this list inherit the sf class? — is_sf_list","title":"Do all items in this list inherit the sf class? — is_sf_list","text":"items list inherit sf class?","code":""},{"path":"https://elipousson.github.io/isstatic/reference/is_sf_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Do all items in this list inherit the sf class? — is_sf_list","text":"","code":"is_sf_list(x)"},{"path":"https://elipousson.github.io/isstatic/reference/is_sf_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Do all items in this list inherit the sf class? — is_sf_list","text":"x Object tested.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/is_unit.html","id":null,"dir":"Reference","previous_headings":"","what":"Is this a unit class object? — is_unit","title":"Is this a unit class object? — is_unit","text":"unit class object? margin class object?","code":""},{"path":"https://elipousson.github.io/isstatic/reference/is_unit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is this a unit class object? — is_unit","text":"","code":"is_unit(x)  is_margin(x)"},{"path":"https://elipousson.github.io/isstatic/reference/is_unit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is this a unit class object? — is_unit","text":"x Object tested.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/is_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Is this a units class object? — is_units","title":"Is this a units class object? — is_units","text":"units class object?","code":""},{"path":"https://elipousson.github.io/isstatic/reference/is_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is this a units class object? — is_units","text":"","code":"is_units(x)"},{"path":"https://elipousson.github.io/isstatic/reference/is_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is this a units class object? — is_units","text":"x Object tested.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/is_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Is an object a URL? — is_url","title":"Is an object a URL? — is_url","text":"object URL? is_esri_url(): object ArcGIS MapServer FeatureServer URL? is_gsheet_url(): object Google Sheets URL? is_gist_url(): object URL GitHub Gist? is_gmap_url(): object Google Maps URL?","code":""},{"path":"https://elipousson.github.io/isstatic/reference/is_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is an object a URL? — is_url","text":"","code":"is_url(x)  is_esri_url(x)  is_gsheet_url(x)  is_gist_url(x)  is_gmap_url(x)"},{"path":"https://elipousson.github.io/isstatic/reference/is_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is an object a URL? — is_url","text":"x object tested.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/isstatic-package.html","id":null,"dir":"Reference","previous_headings":"","what":"isstatic: Dependency-Free Object Tests — isstatic-package","title":"isstatic: Dependency-Free Object Tests — isstatic-package","text":"Convenience functions checking class inheritance, extracting attributes, basic type conversion, miscellaneous string manipulation. working sf, ggplot2, packages.","code":""},{"path":[]},{"path":"https://elipousson.github.io/isstatic/reference/isstatic-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"isstatic: Dependency-Free Object Tests — isstatic-package","text":"Maintainer: Eli Pousson eli.pousson@gmail.com (ORCID) [copyright holder]","code":""},{"path":"https://elipousson.github.io/isstatic/reference/map_chr.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a function to each element of a vector. — map_chr","title":"Apply a function to each element of a vector. — map_chr","text":"Apply function element vector.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/map_chr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a function to each element of a vector. — map_chr","text":"","code":"map_chr(.x, .f, ...)"},{"path":"https://elipousson.github.io/isstatic/reference/map_chr.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Apply a function to each element of a vector. — map_chr","text":"purr-like functions staticimports package","code":""},{"path":"https://elipousson.github.io/isstatic/reference/map_chr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Apply a function to each element of a vector. — map_chr","text":"Winston Chang winston@stdout.org","code":""},{"path":"https://elipousson.github.io/isstatic/reference/plural_words.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple helper for pluralizing words — plural_words","title":"Simple helper for pluralizing words — plural_words","text":"Simple helper pluralizing words","code":""},{"path":"https://elipousson.github.io/isstatic/reference/plural_words.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple helper for pluralizing words — plural_words","text":"","code":"plural_words(   words,   n = 1,   suffix = \"s\",   before = \"\",   after = \"\",   replacement = NULL )"},{"path":"https://elipousson.github.io/isstatic/reference/roman_to_int.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a Roman numeral character object into a corresponding integer — roman_to_int","title":"Convert a Roman numeral character object into a corresponding integer — roman_to_int","text":"Integers NA objects passed . Double numeric objects characters corresponding Roman numeral converting NA values.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/roman_to_int.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a Roman numeral character object into a corresponding integer — roman_to_int","text":"","code":"roman_to_int(x, quiet = TRUE)"},{"path":"https://elipousson.github.io/isstatic/reference/roman_to_int.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a Roman numeral character object into a corresponding integer — roman_to_int","text":"x integer vector character vector characters representing Roman numerals. quiet TRUE, suppress warnings introduction NA values coercion.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/set_start_number.html","id":null,"dir":"Reference","previous_headings":"","what":"Set start number for numeric vector x — set_start_number","title":"Set start number for numeric vector x — set_start_number","text":"Helper as_numbered_labels().","code":""},{"path":"https://elipousson.github.io/isstatic/reference/set_start_number.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set start number for numeric vector x — set_start_number","text":"","code":"set_start_number(x, start = NULL, labels = \"arabic\")"},{"path":"https://elipousson.github.io/isstatic/reference/set_start_number.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set start number for numeric vector x — set_start_number","text":"x integer vector data.frame. integer vector integer column used number converted based label style. x integer data.frame integer column, numbering created based seq_along(). start Starting number value. Letters supported label style \"alph\", \"Alph\", \"alpha\",  \"Alpha\" Roman numerals supported label \"roman\" \"Roman\". labels Label style. Options include \"arabic\", \"alph\", \"Alph\", \"alpha\", \"Alpha\", \"roman\", \"Roman\".","code":""},{"path":"https://elipousson.github.io/isstatic/reference/static_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Static checks — static_check","title":"Static checks — static_check","text":"Static checks","code":""},{"path":"https://elipousson.github.io/isstatic/reference/static_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Static checks — static_check","text":"","code":"static_check_if(condition, message = NULL, call = parent.frame())  static_check_character(x, call = parent.frame())  static_check_numeric(x, call = parent.frame())  static_check_nchar(x, n = 1, ..., call = parent.frame())  static_check_name(x, name = NULL, call = parent.frame())"},{"path":"https://elipousson.github.io/isstatic/reference/static_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Static checks — static_check","text":"condition Condition check. message Message pass stop condition FALSE. Defaults NULL. call Call passed stop. Defaults parent.frame()","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_c.html","id":null,"dir":"Reference","previous_headings":"","what":"Join multiple strings into a single string — str_c","title":"Join multiple strings into a single string — str_c","text":"Dependency-free drop-alternative stringr::str_c().","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_c.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join multiple strings into a single string — str_c","text":"","code":"str_c(..., sep = \"\", collapse = NULL)"},{"path":"https://elipousson.github.io/isstatic/reference/str_c.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Join multiple strings into a single string — str_c","text":"Adapted stringr package.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_c.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join multiple strings into a single string — str_c","text":"... One character vectors. Zero length arguments removed. Short arguments recycled length longest. Like R functions, missing values \"infectious\": whenever missing value combined another string result always missing. Use str_replace_na() convert NA \"NA\" sep String insert input vectors. collapse Optional string used combine input vectors single string.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_c.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join multiple strings into a single string — str_c","text":"collapse = NULL (default) character vector length equal longest input string. collapse non-NULL, character vector length 1.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_detect.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect the presence or absence of a pattern in a string — str_detect","title":"Detect the presence or absence of a pattern in a string — str_detect","text":"Dependency-free drop-alternative stringr::str_detect().","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_detect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect the presence or absence of a pattern in a string — str_detect","text":"","code":"str_detect(string, pattern, negate = FALSE)"},{"path":"https://elipousson.github.io/isstatic/reference/str_detect.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Detect the presence or absence of a pattern in a string — str_detect","text":"Adapted stringr package.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_detect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect the presence or absence of a pattern in a string — str_detect","text":"string Input vector. Either character vector, something coercible one. pattern Pattern look . default interpretation regular expression, described base::regex. Control options regex(). Match fixed string (.e. comparing bytes), using fixed(). fast, approximate. negate TRUE, return non-matching elements.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_detect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect the presence or absence of a pattern in a string — str_detect","text":"logical vector.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract matching patterns from a string — str_extract","title":"Extract matching patterns from a string — str_extract","text":"Dependency-free drop-alternative stringr::str_extract().","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract matching patterns from a string — str_extract","text":"","code":"str_extract(string, pattern)"},{"path":"https://elipousson.github.io/isstatic/reference/str_extract.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Extract matching patterns from a string — str_extract","text":"Adapted stringr package.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract matching patterns from a string — str_extract","text":"string Input vector. Either character vector, something coercible one. pattern Pattern look . default interpretation regular expression, described base::regex. Control options regex(). Match fixed string (.e. comparing bytes), using fixed(). fast, approximate.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract matching patterns from a string — str_extract","text":"character matrix. first column complete match, followed one column capture group.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_fileext.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify strings to help make consistent file names — str_fileext","title":"Modify strings to help make consistent file names — str_fileext","text":"Functions include:","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_fileext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify strings to help make consistent file names — str_fileext","text":"","code":"str_add_fileext(string, fileext = NULL)  str_remove_fileext(string, fileext = NULL)  str_extract_fileext(string, fileext = NULL)"},{"path":"https://elipousson.github.io/isstatic/reference/str_fileext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify strings to help make consistent file names — str_fileext","text":"string Character vector fileext File extension string","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_fileext.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Modify strings to help make consistent file names — str_fileext","text":"str_add_fileext(): Add file type string str_remove_fileext(): Remove file type string str_extract_fileext(): Extract file type string","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_length.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the length of a string — str_length","title":"Compute the length of a string — str_length","text":"Dependency-free drop-alternative stringr::str_length().","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the length of a string — str_length","text":"","code":"str_length(string)"},{"path":"https://elipousson.github.io/isstatic/reference/str_length.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Compute the length of a string — str_length","text":"Adapted stringr package.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the length of a string — str_length","text":"string Input vector. Either character vector, something coercible one.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_length.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the length of a string — str_length","text":"numeric vector length string.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_n_freq.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the n most frequent or least frequent appearing values in a vector — str_n_freq","title":"Get the n most frequent or least frequent appearing values in a vector — str_n_freq","text":"function address ties frequency.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_n_freq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the n most frequent or least frequent appearing values in a vector — str_n_freq","text":"","code":"str_n_freq(string = NULL, n = NULL, decreasing = TRUE)"},{"path":"https://elipousson.github.io/isstatic/reference/str_n_freq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the n most frequent or least frequent appearing values in a vector — str_n_freq","text":"string character vector. n number values return based frequency appearance. Defaults NULL returns unique values x. decreasing Passed sort()","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_pad.html","id":null,"dir":"Reference","previous_headings":"","what":"Duplicate and concatenate strings within a character vector — str_pad","title":"Duplicate and concatenate strings within a character vector — str_pad","text":"Dependency-free drop-alternative stringr::str_pad().","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_pad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Duplicate and concatenate strings within a character vector — str_pad","text":"","code":"str_pad(   string,   width,   side = c(\"left\", \"right\", \"both\"),   pad = \" \",   use_width = TRUE )"},{"path":"https://elipousson.github.io/isstatic/reference/str_pad.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Duplicate and concatenate strings within a character vector — str_pad","text":"Adapted stringr package.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_pad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Duplicate and concatenate strings within a character vector — str_pad","text":"string Input vector. Either character vector, something coercible one. width Minimum width padded strings. side Side padding character added (left, right ). pad Single padding character (default space). use_width FALSE, use length string instead width; see str_width()/str_length() difference.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_pad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Duplicate and concatenate strings within a character vector — str_pad","text":"character vector.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_pad.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Duplicate and concatenate strings within a character vector — str_pad","text":"Eli Pousson eli.pousson@gmail.com (ORCID) Alexander Rossell Hayes alexander@rossellhayes.com (ORCID)","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_pad_digits.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify digits within strings — str_pad_digits","title":"Modify digits within strings — str_pad_digits","text":"str_replace_digits(): Replace digits string optionally incrementing digits str_pad_digits(): Pad string digits str_extract_digits(): Extract digits string","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_pad_digits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify digits within strings — str_pad_digits","text":"","code":"str_pad_digits(string, pad = \"0\", side = \"left\", width = NULL)  str_extract_digits(string, pattern = \"[0-9]+\", side = NULL)  str_replace_digits(string, replacement, pad = \"0\", side = \"left\", width = NULL)  str_increment_digits(string, increment = TRUE, ...)"},{"path":"https://elipousson.github.io/isstatic/reference/str_pad_digits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify digits within strings — str_pad_digits","text":"string Input vector. Either character vector, something coercible one. pad Single padding character added digits string; defaults \"0\" side Side padding character added (left, right ). width Minimum width padded strings. pattern Pattern look . default interpretation regular expression, described base::regex. Control options regex(). Match fixed string (.e. comparing bytes), using fixed(). fast, approximate. replacement character vector replacements. either length one, length string pattern. References form \\1, \\2, etc. replaced contents respective matched group (created ()). replace complete string NA, use replacement = NA_character_. Using function replacement yet supported. increment TRUE, increment digits string 1. numeric, increment digits string value. NULL, 0, digits present string, return string . ... Passed str_replace_digits()","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_remove.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove matched patterns in a string — str_remove","title":"Remove matched patterns in a string — str_remove","text":"Dependency-free drop-alternative stringr::str_remove().","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_remove.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove matched patterns in a string — str_remove","text":"","code":"str_remove(string, pattern)"},{"path":"https://elipousson.github.io/isstatic/reference/str_remove.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Remove matched patterns in a string — str_remove","text":"Adapted stringr package.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_remove.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove matched patterns in a string — str_remove","text":"string Input vector. Either character vector, something coercible one. pattern Pattern look . default interpretation regular expression, described base::regex. Control options regex(). Match fixed string (.e. comparing bytes), using fixed(). fast, approximate.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_remove.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove matched patterns in a string — str_remove","text":"character vector.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_replace.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace matched patterns in a string — str_replace","title":"Replace matched patterns in a string — str_replace","text":"Dependency-free drop-alternative stringr::str_replace().","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_replace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace matched patterns in a string — str_replace","text":"","code":"str_replace(string, pattern, replacement)"},{"path":"https://elipousson.github.io/isstatic/reference/str_replace.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Replace matched patterns in a string — str_replace","text":"Adapted stringr package.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_replace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace matched patterns in a string — str_replace","text":"string Input vector. Either character vector, something coercible one. pattern Pattern look . default interpretation regular expression, described base::regex. Control options regex(). Match fixed string (.e. comparing bytes), using fixed(). fast, approximate. replacement character vector replacements. either length one, length string pattern. References form \\1, \\2, etc. replaced contents respective matched group (created ()). replace complete string NA, use replacement = NA_character_. Using function replacement yet supported.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_replace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace matched patterns in a string — str_replace","text":"character vector.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_replace_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace matched patterns in a string — str_replace_all","title":"Replace matched patterns in a string — str_replace_all","text":"Dependency-free drop-alternative stringr::str_replace_all().","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_replace_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace matched patterns in a string — str_replace_all","text":"","code":"str_replace_all(string, pattern, replacement)"},{"path":"https://elipousson.github.io/isstatic/reference/str_replace_all.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Replace matched patterns in a string — str_replace_all","text":"Adapted stringr package.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_replace_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace matched patterns in a string — str_replace_all","text":"string Input vector. Either character vector, something coercible one. pattern Pattern look . default interpretation regular expression, described base::regex. Control options regex(). Match fixed string (.e. comparing bytes), using fixed(). fast, approximate. replacement character vector replacements. either length one, length string pattern. References form \\1, \\2, etc. replaced contents respective matched group (created ()). perform multiple replacements element string, pass named vector (c(pattern1 = replacement1)) str_replace_all(). replace complete string NA, use replacement = NA_character_. Using function replacement yet supported.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_replace_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace matched patterns in a string — str_replace_all","text":"character vector.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_width.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the width of a string — str_width","title":"Compute the width of a string — str_width","text":"Dependency-free drop-alternative stringr::str_width(). Results non-ASCII characters may inaccurate R < 4.0.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_width.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the width of a string — str_width","text":"","code":"str_width(string)"},{"path":"https://elipousson.github.io/isstatic/reference/str_width.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Compute the width of a string — str_width","text":"Adapted stringr package.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_width.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the width of a string — str_width","text":"string Input vector. Either character vector, something coercible one.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/str_width.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the width of a string — str_width","text":"numeric vector length string.","code":""},{"path":"https://elipousson.github.io/isstatic/reference/tosentence.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to a common sentence case — tosentence","title":"Convert to a common sentence case — tosentence","text":"Convert common sentence case","code":""},{"path":"https://elipousson.github.io/isstatic/reference/tosentence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to a common sentence case — tosentence","text":"","code":"tosentence(x)"},{"path":"https://elipousson.github.io/isstatic/reference/tosentence.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Convert to a common sentence case — tosentence","text":"Statistics Globe","code":""},{"path":"https://elipousson.github.io/isstatic/reference/tosentence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to a common sentence case — tosentence","text":"x character vector, object can coerced character .character().","code":""},{"path":"https://elipousson.github.io/isstatic/reference/tosentence.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert to a common sentence case — tosentence","text":"Joachim Schork info@joachimschork.com","code":""},{"path":"https://elipousson.github.io/isstatic/reference/underscore.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace spaces in string with underscores — underscore","title":"Replace spaces in string with underscores — underscore","text":"Replace spaces string underscores","code":""},{"path":"https://elipousson.github.io/isstatic/reference/underscore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace spaces in string with underscores — underscore","text":"","code":"underscore(string)"},{"path":"https://elipousson.github.io/isstatic/reference/underscore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace spaces in string with underscores — underscore","text":"string String transform replacing spaces underscores.","code":""},{"path":"https://elipousson.github.io/isstatic/news/index.html","id":"isstatic-0109000-2023-03-15","dir":"Changelog","previous_headings":"","what":"isstatic 0.1.0.9000 (2023-03-15)","title":"isstatic 0.1.0.9000 (2023-03-15)","text":"Initial release.","code":""}]
